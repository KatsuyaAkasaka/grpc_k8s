version: 2
references:
  setup_env: &setup_env
    name: Set Environment Variable
    command: |
      echo 'export GCP_PROJECT=${GCP_PROJECT}' >> $BASH_ENV
      echo 'export GO111MODUELE="on"' >> $BASH_ENV
      echo 'export IMAGE_NAME=${CIRCLE_BRANCH}' >> $BASH_ENV
      echo 'export IMAGE_PATH="asia.gcr.io/noticonn-test/k8s-grpc"' >> $BASH_ENV
      if [ $CIRCLE_BRANCH == 'develop' ]; then
        echo 'export DOCKER_IMAGE_TAG=latest' >> $BASH_ENV
      else
        echo 'export DOCKER_IMAGE_TAG=$(echo $CIRCLE_BRANCH | sed -e "s/[^a-z0-9]/-/g")' >> $BASH_ENV
      fi
      source $BASH_ENV
  install_dc: &install_dc
    name: Install docker-compose
    command: |
      curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
      chmod +x ~/docker-compose
      mv ~/docker-compose /usr/local/bin/docker-compose
  auth_gcloud: &auth_gcloud
    working_directory: ~/k8s_grpc
    name: Authenticate gcloud
    command: |
      echo $GCP_SA > gcloud-service-key.json
      gcloud auth activate-service-account --key-file gcloud-service-key.json
      gcloud auth configure-docker --quiet
  build_client: &build_client
    name: docker-compose build
    command: docker-compose build client
  build_server: &build_server
    name: docker-compose build
    command: docker-compose build server
  push_image_client: &push_image_client
    working_directory: ~/k8s_grpc/client
    name: push_image
    command: |
      docker tag client ${IMAGE_PATH}/client:${DOCKER_IMAGE_TAG}
      docker tag client ${IMAGE_PATH}/client:${CIRCLE_SHA1}
      docker push ${IMAGE_PATH}/client:${DOCKER_IMAGE_TAG}
      docker push ${IMAGE_PATH}/client:${CIRCLE_SHA1}
  push_image_server: &push_image_server
    working_directory: ~/k8s_grpc/server
    name: push_image
    command: |
      docker tag server ${IMAGE_PATH}/server:${DOCKER_IMAGE_TAG}
      docker tag server ${IMAGE_PATH}/server:${CIRCLE_SHA1}
      docker push ${IMAGE_PATH}/server:${DOCKER_IMAGE_TAG}
      docker push ${IMAGE_PATH}/server:${CIRCLE_SHA1}
  deploy_server: &deploy_server
    working_directory: ~/k8s_grpc
    name: deploy server
    command: |
      ./k8s/server/overlays/production/build.sh "${IMAGE_PATH}/server:${CIRCLE_SHA1}"
      kubectl apply -f ./k8s/manifest/server-deploy.yaml
  deploy_client: &deploy_client
    working_directory: ~/k8s_grpc
    name: deploy client
    command: |
      ./k8s/client/overlays/production/build.sh "${IMAGE_PATH}/client:${CIRCLE_SHA1}"
      kubectl apply -f ./k8s/manifest/client-deploy.yaml

jobs:
  push_image_client:
    working_directory: ~/k8s_grpc
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run: *setup_env
      - run: *install_dc
      - run: *auth_gcloud
      - run: *build_client
      - run: *push_image_client
      - run: *deploy_client
  push_image_server:
    working_directory: ~/k8s_grpc
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run: *setup_env
      - run: *install_dc
      - run: *auth_gcloud
      - run: *build_server
      - run: *push_image_server
      - run: *deploy_server

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - push_image_client:
          filters:
            tags:
              only: /^.*/
      - push_image_server:
          filters:
            tags:
              only: /^.*/

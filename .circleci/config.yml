version: 2
references:
  setup_env: &setup_env
    name: Set Environment Variable
    command: |
      echo 'export GCP_PROJECT=${GCP_PROJECT}' >> $BASH_ENV
      echo 'export GO111MODUELE="on"' >> $BASH_ENV
      echo 'export IMAGE_NAME=${CIRCLE_BRANCH}' >> $BASH_ENV
      echo 'export IMAGE_PATH="asia.gcr.io/noticonn-test/k8s-grpc"' >> $BASH_ENV
      if [ $CIRCLE_BRANCH == 'develop' ]; then
        echo 'export DOCKER_IMAGE_TAG=latest' >> $BASH_ENV
      else
        echo 'export DOCKER_IMAGE_TAG=$(echo $CIRCLE_BRANCH | sed -e "s/[^a-z0-9]/-/g")' >> $BASH_ENV
      fi
      source $BASH_ENV
  install_dc: &install_dc
    name: Install docker-compose
    command: |
      curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
      chmod +x ~/docker-compose
      mv ~/docker-compose /usr/local/bin/docker-compose
  auth_gcloud: &auth_gcloud
    working_directory: ~/k8s_grpc
    name: Authenticate gcloud
    command: |
      echo $GCP_SA > gcloud-service-key.json
      gcloud auth activate-service-account --key-file gcloud-service-key.json
      gcloud --quiet auth configure-docker
      gcloud --quiet config set project noticonn-test
      gcloud --quiet config set compute/zone asia-northeast1-a
      gcloud --quiet container clusters get-credentials k8s-grpc
  build_client: &build_client
    name: docker-compose build
    command: docker-compose build client
  build_server: &build_server
    name: docker-compose build
    command: docker-compose build server
  push_image_client: &push_image_client
    working_directory: ~/k8s_grpc/client
    name: push_image
    command: |
      docker tag client ${IMAGE_PATH}/client:${DOCKER_IMAGE_TAG}
      docker tag client ${IMAGE_PATH}/client:${CIRCLE_SHA1}
      docker push ${IMAGE_PATH}/client:${DOCKER_IMAGE_TAG}
      docker push ${IMAGE_PATH}/client:${CIRCLE_SHA1}
  push_image_server: &push_image_server
    working_directory: ~/k8s_grpc/server
    name: push_image
    command: |
      docker tag server ${IMAGE_PATH}/server:${DOCKER_IMAGE_TAG}
      docker tag server ${IMAGE_PATH}/server:${CIRCLE_SHA1}
      docker push ${IMAGE_PATH}/server:${DOCKER_IMAGE_TAG}
      docker push ${IMAGE_PATH}/server:${CIRCLE_SHA1}
  apt-get_update: &apt-get_update
      working_directory: ~/k8s_grpc
      name: apt-get update
      command: |
        apt-get update
        apt-get install -y wget
  install_kubectl: &install_kubectl
    working_directory: ~/k8s_grpc
    name: install kubectl
    command: |
      curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      mv kubectl /usr/local/bin
      chmod +x /usr/local/bin/kubectl
      kubectl version
  install_kustomize: &install_kustomize
    working_directory: ~/k8s_grpc
    name: install kustomize
    command: |
      wget https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.5.1/kustomize_v3.5.1_linux_amd64.tar.gz
      tar xvzf kustomize_v3.5.1_linux_amd64.tar.gz
      mv kustomize /usr/local/bin
      chmod +x /usr/local/bin/kustomize
      kustomize version
  deploy: &deploy
    working_directory: ~/k8s_grpc
    name: deploy gke
    command: |
      ./k8s/overlays/production/build.sh ${IMAGE_PATH}/client:${CIRCLE_SHA1} ${IMAGE_PATH}/server:${CIRCLE_SHA1}
      kubectl apply -f ./k8s/manifest/production/deploy.yaml

jobs:
  push_image_client:
    working_directory: ~/k8s_grpc
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run: *setup_env
      - run: *install_dc
      - run: *auth_gcloud
      - run: *build_client
      - run: *push_image_client
  push_image_server:
    working_directory: ~/k8s_grpc
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run: *setup_env
      - run: *install_dc
      - run: *auth_gcloud
      - run: *build_server
      - run: *push_image_server
  deploy:
    working_directory: ~/k8s_grpc
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run: *setup_env
      - run: *apt-get_update
      - run: *auth_gcloud
      - run: *install_kubectl
      - run: *install_kustomize
      - run: *deploy
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - push_image_client
      - push_image_server
      - deploy:
          requires:
            - push_image_client
            - push_image_server
